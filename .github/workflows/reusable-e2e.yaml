name: Reusable workflow example

on:
  workflow_call:
    inputs:
      pipelines-release:
        required: true
        type: string
      k8s-version:
        required: true
        type: string

defaults:
  run:
    shell: bash
    working-directory: ./

jobs:
  e2e-test:
    name: e2e test
    runs-on: ubuntu-22.04

    env:
      GOFLAGS: -ldflags=-s -ldflags=-w
      KO_DOCKER_REPO: kind.local
      KOCACHE: ~/ko
      TEKTON_PIPELINES_RELEASE: "https://storage.googleapis.com/tekton-releases/pipeline/previous/${{ inputs.pipelines-release }}/release.yaml"
      # Note that we do not include the v prefix here so we can use it in all
      # the places this is used.

    steps:
    - name: Check out our repo
      uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.7

    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: "go.mod"

    - uses: ko-build/setup-ko@v0.9
      with:
        version: tip

    - name: Run Integration tests
      run: |
        echo "Running Go e2e tests"
        set +e
        # Run tests with verbose output to show per-test results
        go test -v -timeout 35m ./test/... | tee test_output.log
        test_exit_code=$?
        set -e

        # Display test results summary
        echo "=== Test Results Summary ==="
        grep -E "^=== RUN|^--- PASS|^--- FAIL|^--- SKIP" test_output.log

        if [[ $test_exit_code -ne 0 ]]; then
          echo "Tests failed!"
          exit 1
        else
          echo "All tests passed!"
        fi
